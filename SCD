import sam
import numpy as np
import pandas as pd
import scanpy as sc
import matplotlib.pyplot as plt

# Load single-cell RNA-seq data (replace with your dataset)
adata = sc.datasets.pbmc3k()  # Example dataset: 3k PBMC cells

# Preprocessing
sc.pp.filter_cells(adata, min_genes=200)
sc.pp.filter_genes(adata, min_cells=3)
sc.pp.normalize_total(adata, target_sum=1e4)
sc.pp.log1p(adata)
sc.pp.highly_variable_genes(adata, min_mean=0.0125, max_mean=3, min_disp=0.5)
adata = adata[:, adata.var['highly_variable']]

# Convert data to numpy format for SAM
X = adata.X.toarray() if hasattr(adata.X, "toarray") else adata.X

# Initialize SAM model
sam_model = sam.SAM(n_components=50, verbose=True)

# Fit the model on single-cell data
sam_model.fit(X)

# Extract low-dimensional representation
sam_embedding = sam_model.transform(X)

# Add SAM embedding to AnnData object
adata.obsm["X_sam"] = sam_embedding

# Visualization using UMAP
sc.pp.neighbors(adata, use_rep='X_sam')
sc.tl.umap(adata)
sc.pl.umap(adata, color='louvain')  # Louvain clustering visualization

# Save results
adata.write("sam2_processed.h5ad")
print("SAM analysis complete and saved!")
